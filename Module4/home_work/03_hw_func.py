
# Даны координаты центров двух окружностей (x1; y1) (x2; y2) и и их радиусы  R1 и R2.
# Находится ли одна окружность целиком внутри другой
#           x  y  R

# ПРИМЕЧАНИЕ: При решении задачи предполагается, что граница одной окружности должна быть СТРОГО в середине другой окружности
#             Если границы могут совпадать то нужно убрать условие преждевременного выхода из программы и поменять одно неравенство с < на <= 

# Функция для определения расстояние между двумя точками
def distance(x1, y1, x2, y2):
    return ((x2-x1)**2 + (y2-y1)**2)**0.5

# Функция проверки того что одна окружность вписана в другую
def check_circles(cir_1 , cir_2):
    # Если радиусы одинаковы а координаты нет, то ни одна окружность не может быть вписана в другую
    if cir_1[2] == cir_2[2]:
        return False
    # Находим расстоние между центрами окружностей
    center_distance = distance(cir_1[0], cir_1[1], cir_2[0], cir_2[1])
    # Определение большей и меньшей окружностей
    cir_max = cir_1 if cir_1[2] > cir_2[2] else cir_2
    cir_min = cir_2 if cir_max == cir_1 else cir_1

    # Расстояние между центрами окружностей должно быть меньше большего радиуса и сумма расстония между центрами и меньшим радиусом должна быть СТРОГО меньше большего радиуса
    return center_distance < cir_max[2] and (cir_min[2] + center_distance) < cir_max[2]

# Дано:
circle_1 = (0, 0, 4)
circle_2 = (1, 1, 6)

# Если координаты и радиусы одинаковы, то окружности совпадаю (Выходим из программы)
if circle_1 == circle_2:
    print('Окружности совпадают')
    quit()

print(check_circles(circle_1, circle_2))

# PS Возможно много комментариев ) , но лучше с ними
