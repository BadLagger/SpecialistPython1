# Чтобы	поднять холодильник на N-й этаж M-этажного дома, Коля вызвал бригаду грузчиков.
# За подъем холодильника на один этаж требуется заплатить 200 рублей, за спуск на один этаж — 100 рублей.
# За подъем и спуск на лифте плата не взимается.
# Несмотря на то, что в Колином доме есть лифт, ему возможно все же придется заплатить грузчикам,
# поскольку лифт останавливается только на каждом K-м этаже, начиная с первого
# (то есть на этажах с номерами 1, K+1, 2K+1, 3K+1, …).
# Требуется вычислить, за какую минимальную сумму грузчики доставят холодильник с первого этажа на этаж Коли.

# Формат входных данных
# Даны три числа, h - высота дома, f - этаж Коли и k - через сколько этажей останавливается лифт.
# M (2≤h≤100), N (2≤f≤M) и K (2≤k≤h–1).
# Формат выходных данных
# Выведите одно целое число - минимальную стоимость подъема

# Примеры для самопроверки:
# Входные данные-1:
# 20
# 7
# 4
# Выходные данные-1:
# 200
# Входные данные-2:
# 20
# 7
# 2
# Выходные данные-2:
# 0

h = 20 #int(input('Введите высоту дома: '))
f = 7  #int(input('Введите этаж доставки: '))
k = 4  #int(input('Введите через сколько этажей останавливается лифт: '))

# Функция возращает оптимальную сумму доставки
# deliver_floor - этаж доставки
# lower_floor - ближайший нижний этаж на котором останавливается лифт
# higher_floor - ближайший верхний этаж на котором останавливается лифт
def get_best_price(deliver_floor, lower_floor, higher_floor):
    rise_bill = (deliver_floor - lower_floor) * 200
    down_bill = (higher_floor - deliver_floor) * 100
    return rise_bill if rise_bill < down_bill else down_bill

lower_floor = (f - 1) // k * k + 1                           # Находим нижний ближайший этаж с лифтом
higher_floor = lower_floor + k if lower_floor + k < h else h # Находим верхний ближайший этаж с лифтом
result = get_best_price(f, lower_floor, higher_floor)

print('Цена: ', result)
